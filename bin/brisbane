#!/usr/bin/env ruby

$: << File.join(File.dirname(__FILE__), '..', 'lib')

require 'optparse'
require 'brisbane'

command = nil
options = {}
help    = <<-HELP
Brisbane generates a static photo gallery from Twitter hashtags.

Usage:
  brisbane new   HASHTAG               # Setup files and directories
  brisbane fetch HASHTAG [options...]  # Fetch tagged tweets with photos
  brisbane build         [options...]  # Build gallery
  
Help:
  brisbane <command> --help

HELP

case ARGV[0]
when 'new'
  if ARGV.size == 2 && ARGV[1] != "--help"
    options[:source]  = File.join(Dir.pwd, ARGV[1])
    options[:hashtag] = ARGV[1]
    command           = -> config { Brisbane::Generator.new(config) }
  else
    puts "Invalid argument. Try `brisbane new HASHTAG`"
    exit 1
  end
when 'fetch'
  OptionParser.new do |o|  
    o.banner = 'Usage: brisbane fetch HASHTAG [options...]'
    
    o.on('--destination DIR') do |arg|
      options[:dest] = arg
    end

    o.on('--source DIR') do |arg|
      options[:source] = arg
    end
    
    o.on('--flickr-api-key KEY') do |arg|
      options[:flickr_api_key] = arg
    end
    
    o.on('--limit COUNT', Integer) do |arg|
      options[:limit] = arg
    end

    o.parse!(ARGV)
  end
      
  if ARGV.size == 2
    options[:hashtag] = ARGV[1]
    command           = -> config { Brisbane::Fetch.new(config) }
  else
    puts "Invalid argument. Run `brisbane fetch --help` for assistance."
    exit 1
  end
when 'build'
  OptionParser.new do |o|  
    o.banner = 'Usage: brisbane build [options...]'
    
    o.on('--destination DIR') do |arg|
      options[:dest] = arg
    end

    o.on('--source DIR') do |arg|
      options[:source] = arg
    end
    
    o.on('--per-page COUNT', Integer) do |arg|
      options[:per_page] = arg
    end

    o.parse!(ARGV)
  end
  
  command = -> config { Brisbane::Site.new(config) }
when '--help'
  puts help
  exit 0
else
  puts "Invalid command. Run `brisbane --help` for assistance."
  exit 1
end

command.call(Brisbane::Configuration.new(:default, options)).process
